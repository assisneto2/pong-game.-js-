<!DOCTYPE html>
<html lang= "pt-br">
    <head>
        <meta charset="utf-8" /> 
        <style>
            canvas {
                position: absolute;
                left: 50%;
                top: 50%;
                background-color:black;
                margin-top: -380px; 
                margin-left: -500px; 
            }
        </style>
    </head>
    <body>
        <canvas height="600" width="600" id="canvas"></canvas>
    </body>
</html>

<script>

var canvas = document.getElementById("canvas")
var ctx = canvas.getContext("2d")  

var teclas = {}; 
var bola = { /* medidas, velocidade e onde a bola ira aparecer */ 
    x: canvas.width / 2 - 15, 
    y: canvas.height / 2 - 15, 
    altura: 30, 
    largura: 30, 
    dirx: -1, 
    diry: 1,
    mod: 0,  
    speed: 5 
}

var esquerda = {
    x: 10, 
    y: canvas.height / 2 - 60, 
    altura: 120, 
    largura: 10, 
    speed: 15 
};
    /* medidas , velocidade e onde as barras irão aparecer */ 
var direita = {
    x: 560, 
    y: canvas.height / 2 - 60, 
    altura: 120, 
    largura: 10, 
    speed: 15 
}; 

document.addEventListener("keydown", function (e) {
   teclas[e.keyCode] = true; /* para fazer com que as teclas selecionadas possam ser tecladas */ 


}, false);  //eventlist - toda vez que uma tecla for digitada executa tal função. 

document.addEventListener("keyup" , function(e){
    delete teclas[e.keyCode]; 
}, false) 

function mbloco() { 
    if (87 in teclas && esquerda.y > 0){  /* tecla W */
        esquerda.y -= esquerda.speed; 
} 

    if (83 in teclas && esquerda.y + esquerda.altura < canvas.height) {  /* tecla S */
        esquerda.y += esquerda.speed; 
} 

    if (38 in teclas && direita.y > 0 ) {   /* tecla para cima */
        direita.y -= direita.speed
}

    if (40 in teclas && direita.y + direita.altura < canvas.height){ /* tecla para baixo */ 
        direita.y += direita.speed; 
}

}    

function mbola () {
    if (bola.y + bola.altura >= esquerda.y && bola.y <= esquerda.y + esquerda.altura && bola.x <=esquerda.x + esquerda.largura) {
        bola.dirx = 1 
        
    //else
    }

    if (bola.y + bola.altura >= direita.y && bola.y <= direita.y + direita.altura && bola.x + bola.largura >= direita.x ) {
        bola.dirx = -1 
        
    }    
        /*if para quando a largura e altura da bola encostar nas extremidades do bloco da esquerda e mudar a direção 
        e tambem para rebater apenas no bloco da esquerda , e nao em qualquer canto do lado esquerdo do canvas
        else , mesma função ao lado direito */
        
        /* bola.dirx = 1 ou -1 - para dizer qual a direção que a bola deve seguir quando tocar nas extremidades dos blococs ,
        sendo 1 para direita e -1 para esquerda */



        
    if (bola.y <= 0 ) { /* se a bola for menor ou igual a 0 , que seria a extremidade superior do canvas, atribuimos a bola.diry (direção do eixo y) 1 que ia para baixo */ 
        bola.diry = 1 
    }
    
    if (bola.y + bola.altura >= canvas.height) { /* se a bola.y + bola.altura for maior que canvas.height , que seria a extremidade inferior do canvas, atribuimos a bola.diry (direção do eixo y) -1 que ia para cima */ 
        bola.diry = -1 
    }

    bola.x += bola.speed *  bola.dirx  /* se bola.dirx for 1 ira somar a velocidade da bola , indo para a direita , caso seja -1 ela ira para a esquerda */ 
    bola.y += bola.speed * bola.diry  /* usa-se o mesmo raciocinio da esquerda para direita , caso 1 ira ára a deireita e -1 para a esquerda */ 

    if (bola.x < esquerda.x + esquerda.largura - 15) { 
        reset(); 
    }else{
    /* toda vez que a bola passar das extremidades laterais sem colidir com as barreiras
     , ira dar um reset no jogo , mostrando que foi ponto de algum dos jogadores */ 
    if (bola.x + bola.largura > direita.x + 15) {
        reset(); 
    }
}
}


function reset() { 
    esquerda.y = canvas.height / 2 - esquerda.altura / 2 /* sempre que a bola passar pelas barreiras ans extremidades , fazer com que as barreiras e a bola voltem para o centro */ 
    direita.y = esquerda.y /* como executam a mesma função na hora do reset podemos dizer que esquerda.y = direita.y */ 
    bola.y = canvas.height / 2 - bola.altura / 2 /* colocando a bola no meio da tela por y  */ 
    bola.x = canvas.width / 2 - bola.largura / 2 /* colocando a bola no meio da leta por x  */

}

function mostra() {

    ctx.clearRect(0,0, canvas.width, canvas.height); //sclearRect - sempre que a barra ou bola se mover para cima ou para baixo , limpar a parte que ela ja passou


    mbloco();  /*função que tem que ser chamada para quando a tela aualizar desenhar os novos movimentos dos blocos e da bola */ 

    mbola(); 

    ctx.fillStyle = "red" 
    ctx.fillRect(esquerda.x, esquerda.y, esquerda.largura, esquerda.altura);
    ctx.fillRect(direita.x, direita.y, direita.largura, direita.altura); 
    ctx.fillRect(bola.x, bola.y, bola.largura, bola.altura);    
}

setInterval(mostra, 25);  /* setInterval - serve para chamar uma função , no caso mostra
para desenhar , depois de um determinado tempo em milissegundos */  
</script>
